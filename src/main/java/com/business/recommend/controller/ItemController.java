package com.business.recommend.controller;

import com.alibaba.fastjson.JSONObject;
import com.business.recommend.service.TecentUpload;
import com.business.recommend.util.CommonUtil;
import com.smallchill.core.annotation.Json;
import com.smallchill.core.base.controller.CurdController;
import com.smallchill.core.plugins.dao.Blade;
import com.smallchill.core.toolbox.CMap;
import com.smallchill.core.toolbox.ajax.AjaxResult;
import com.smallchill.core.toolbox.support.Convert;
import com.smallchill.system.model.Generate;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;

import com.business.recommend.model.Item;

import javax.annotation.Resource;
import java.util.List;

/**
 * Generated by Blade.
 * 2017-08-05 10:23:42
 */
@Controller
@RequestMapping("/item")
public class ItemController extends CurdController<Item> {

    @Resource
    private TecentUpload tecentUpload;

    @Override
    public String controllerKey() {
        return "item";
    }

    @Json
    @RequestMapping("/init")
    public AjaxResult init() {

        Item item = new Item();
        item.setBid("b_teg_openrecom_ujwu65iquql72ugizntl");
        item.setBigType("家具");
        item.setDataType("1");
        item.setDescribe("欧式简约储物柜");
        //item.setExpire_time(System.currentTimeMillis());
        item.setFree("0");
        item.setItemId("W-97I8V");
        item.setItemTime(CommonUtil.get10DateStr());
        item.setMd5("testmd5");
        item.setMiddleType("柜子");
        item.setPlatform("3");
        item.setPoolId("poolId1");
        item.setPrice(0.0);
        item.setPublish("1");
        item.setRequestId(String.valueOf(System.currentTimeMillis()));
        item.setScore(8.1);
        item.setSmallType("储物柜");
        item.setTags("家具;储物柜;欧式风格;简约;怀旧");
        item.setVender("店铺");

        item.setCity("广州");
        item.setCountry("China");
        item.setLongitude(130.123);
        item.setLatitude(35.23);

        boolean res = this.service.save(this, item, Item.class, null);

        if (res) {
            return success(SAVE_SUCCESS_MSG);
        } else {
            return error(SAVE_FAIL_MSG);
        }
    }

    @Json
    @RequestMapping("/upload")
    public AjaxResult upload() {
        String ids = getParameter("ids");
        List<Item> list = Blade.create(Item.class).findBy("id in (#{join(ids)})", CMap.init().set("ids", Convert.toIntArray(ids)));
        boolean success = true;
        for (Item item : list) {
            Item itemRes = tecentUpload.itemUpload(item);
            if (!itemRes.getSyncCode().equals("0"))
                success = false;
        }
        if (success)
            return success("全部上传成功");
        else
            return error("部分记录上传失败，详细信息查看说明");

    }


}
